# .tmux.conf file from:
#http://media.pragprog.com/titles/bhtmux/code/config/tmux.conf
#plus some additions at end

# tmux 2.1, after 18 Oct 2015
#http://stackoverflow.com/questions/25532773/change-background-color-of-active-or-inactive-pane-in-tmux/33553372#33553372
#
# new syntax for turnin mouse off
set -g mouse off


# Setting the prefix from C-b to C-a
# START:prefix
set -g prefix C-a  
# END:prefix
# Free the original Ctrl-b prefix keybinding
# START:unbind
unbind C-b 
# END:unbind

# set inactive/active window styles
set -g window-style 'fg=colour247,bg=colour236'
set -g window-active-style 'fg=colour250,bg=black'

# imitate iTerm colour scheme for active/inactive windows
set -g pane-border-fg colour250
set -g pane-border-bg colour236
set -g pane-active-border-fg colour250
set -g pane-active-border-bg colour250


# splitting panes
# START:panesplit
bind \ split-window -h
#bind | split-window -h
bind - split-window -v
# END:panesplit

#tired of using prefix key to switch panes...
#https://gist.github.com/spicycode/1229612
#
# moving between panes and windows
#
# Use Alt-vim keys without prefix key to switch panes
# Make sure in iTerm->Preferences->Profiles->Keys (at the bottom)
#http://superuser.com/questions/649960/option-key-does-not-work-as-meta-in-tmux
bind -n M-h select-pane -L
bind -n M-j select-pane -D 
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window


#
# moving between panes
# START:paneselect
#bind h select-pane -L 
#bind j select-pane -D 
#bind k select-pane -U
#bind l select-pane -R    
# END:paneselect


#setting the delay between prefix and command
# START:delay
set -s escape-time 1
# END:delay
# Ensure that we can send Ctrl-A to other apps
# START:bind_prefix
bind C-a send-prefix
# END:bind_prefix

# Set the base index for windows to 1 instead of 0
# START:index
set -g base-index 1
# END:index

# Set the base index for panes to 1 instead of 0
# START:panes_index
setw -g pane-base-index 1
# END:panes_index

# Reload the file with Prefix r
# START:reload
bind r source-file ~/.tmux.conf \; display "Reloaded!"
# END:reload



# Quick pane selection
# START:panetoggle
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
# END:panetoggle

# Pane resizing
# START:paneresize
bind -r H resize-pane -L 5 
bind -r J resize-pane -D 5 
bind -r K resize-pane -U 5 
bind -r L resize-pane -R 5
# END:paneresize

# Set the default terminal mode to 256color mode
# START:termcolor
set -g default-terminal "screen-256color"
# END:termcolor

# enable activity alerts
#START:activity
setw -g monitor-activity on
set -g visual-activity on
#END:activity

# set the status line's colors
# START:statuscolor
set -g status-fg white
set -g status-bg black
# END:statuscolor

# set the color of the window list
# START:windowstatuscolor
setw -g window-status-fg cyan 
setw -g window-status-bg default 
setw -g window-status-attr dim
# END:windowstatuscolor

# set colors for the active window
# START:activewindowstatuscolor
setw -g window-status-current-fg white 
setw -g window-status-current-bg red 
setw -g window-status-current-attr bright
# END:activewindowstatuscolor


# Command / message line
# START:cmdlinecolors
set -g message-fg white
set -g message-bg black
set -g message-attr bright
# END:cmdlinecolors

# Status line left side
# START:statusleft
set -g status-left-length 40 
set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
# END:statusleft

#START:utf8
set -g status-utf8 on
#END:utf8


# Status line right side
# 15% | 28 Nov 18:15
# START: statusright
set -g status-right "#[fg=cyan]%d %b %R"
# END:statusright

# Update the status bar every sixty seconds
# START:updateinterval
set -g status-interval 60
# END:updateinterval

# Center the window list
# START:centerwindowlist
set -g status-justify centre
# END:centerwindowlist

# enable vi keys.
# START:vikeys
setw -g mode-keys vi
# END:vikeys


#=========================================================
#Dean Additions
#=========================================================
# F9 in tmux latex will
# 1) save the tex file
# 2) split window
# 3) clear screen
# 4) search for the most recently modified tex file and 
# save in variable $thistexfile
# 5, 6, 7) save name for swp file
# 8) rm swp file (to avoid errors when latex compile finds an error
# 9) compile and exit IF SUCCESSFUL
# otherwise type 'x'
bind-key -n F6 send-keys Escape :w C-m \; split-window -v -p 20 \; send-keys clear C-m\; send-keys 'thistexfile=$(ls -1t *.tex | head -1)' C-m \; send-keys 'swppre=.' C-m \; send-keys 'swpext=.swp' C-m \; send-keys 'swpfile=$swppre$thistexfile$swpext' C-m \; send-keys 'rm $swpfile' C-m \; send-keys 'pdflatex $thistexfile && exit' C-m 

#for master files, use F7
#contains error message if compiler fails
#TODO: add error message if no .latexmaster file
bind-key -n F7 send-keys Escape :w C-m \; split-window -v -p 20 \; send-keys 'thistexfile=$(ls -1t *.tex | head -1)' C-m \; send-keys 'swppre=.' C-m \; send-keys 'swpext=.swp' C-m \; send-keys 'swpfile=$swppre$thistexfile$swpext' C-m \; send-keys 'rm $swpfile' C-m \; send-keys 'mastertexfile=$(ls -1t *.latexmaster | head -1)' C-m \; send-keys 'echo $mastertexfile' C-m  \; send-keys clear C-m \; send-keys 'texfiletocompile=`echo $mastertexfile | sed -E ' \; send-keys "'s/(.*).latexmaster(.*)/\\1/'`" C-m  \; send-keys 'pdflatex $texfiletocompile && exit ||  printf "\nError while compiling: $texfiletocompile (if blank, then there is no .latexmaster file) \n\n" ' C-m 


#for bibtex use F8
bind-key -n F8 send-keys Escape :w C-m \; split-window -v -p 20 \; send-keys 'thistexfile=$(ls -1t *.tex | head -1)' C-m \; send-keys 'swppre=.' C-m \; send-keys 'swpext=.swp' C-m \; send-keys 'swpfile=$swppre$thistexfile$swpext' C-m \; send-keys 'rm $swpfile' C-m \; send-keys clear C-m \; send-keys 'thisfilebase=`echo $thistexfile | sed -E ' \; send-keys "'s/(.*).tex(.*)/\\1/'`" C-m  \; send-keys 'echo $thisfilebase' C-m \; send-keys 'auxext=.aux' C-m \; send-keys 'thisauxfile=$thisfilebase$auxext' C-m \; send-keys 'echo $thisauxfile' C-m \; send-keys 'bibtex $thisauxfile && exit || printf "\nError while compiling $thisauxfile ; perhaps no .bib file/references for $thistexfile \n\n"' C-m



# Copy/paste in tmux on Mac OSX, by following instructions from 
# https://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future
# Actually, just need to use the following line in a terminal:
# brew install reattach-to-user-namespace
#
# and then:
# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
